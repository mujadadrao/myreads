{"ast":null,"code":"import _toConsumableArray from \"/Users/mujadad/ReactProjects/MyReads/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/mujadad/ReactProjects/MyReads/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mujadad/ReactProjects/MyReads/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mujadad/ReactProjects/MyReads/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mujadad/ReactProjects/MyReads/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mujadad/ReactProjects/MyReads/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mujadad/ReactProjects/MyReads/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport * as ShelfType from \"./constants\";\nimport AppTitle from \"./AppTitle\";\nimport Shelf from \"./Shelf\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { Link, Route } from \"react-router-dom\";\nimport SearchBar from \"./SearchBar\";\n\nvar BooksApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BooksApp, _React$Component);\n\n  function BooksApp(props) {\n    var _this;\n\n    _classCallCheck(this, BooksApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BooksApp).call(this, props));\n\n    _this.fetchAllBooks = function () {\n      BooksAPI.getAll().then(function (books) {\n        _this.setState(function () {\n          return {\n            books: books\n          };\n        });\n      });\n    };\n\n    _this.searchBooks = function (query) {\n      BooksAPI.search(query).then(function (books) {\n        var searchedBooks = [];\n\n        if (SearchBar.isValidArray(books)) {\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = books[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var book = _step.value;\n              book.shelf = _this.getBookShelf(book);\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          searchedBooks = books;\n        }\n\n        _this.setState(function () {\n          return {\n            searchedBooks: searchedBooks\n          };\n        });\n      });\n    };\n\n    _this.getBookShelf = function (book) {\n      var bookIndex = _this.state.books.findIndex(function (b) {\n        return b.id === book.id;\n      });\n\n      if (bookIndex !== -1) {\n        return _this.state.books[bookIndex].shelf;\n      } else {\n        return ShelfType.NONE;\n      }\n    };\n\n    _this.updateBookShelf = function (book, shelf) {\n      BooksAPI.update(book, shelf);\n\n      var bookIndex = _this.state.books.findIndex(function (b) {\n        return b.id === book.id;\n      });\n\n      book.shelf = shelf;\n\n      var books = _toConsumableArray(_this.state.books);\n\n      if (bookIndex !== -1) {\n        books[bookIndex] = book;\n      } else {\n        books.push(book);\n      }\n\n      _this.setState(function (prevState) {\n        return {\n          books: books\n        };\n      });\n    };\n\n    _this.state = {\n      books: [],\n      searchedBooks: []\n    };\n    return _this;\n  }\n\n  _createClass(BooksApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchAllBooks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(AppTitle, {\n        title: 'MyReads',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, ShelfType.types.map(function (shelfType) {\n            return React.createElement(Shelf, {\n              key: shelfType,\n              books: _this2.state.books.filter(function (book) {\n                return book.shelf === shelfType;\n              }),\n              shelfTitle: ShelfType.shelfTitles[shelfType],\n              updateBookShelf: _this2.updateBookShelf,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 88\n              },\n              __self: this\n            });\n          }), React.createElement(\"div\", {\n            className: \"open-search\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/search\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }, \"Search for Book\"))));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/search\",\n        render: function render() {\n          return React.createElement(SearchBar, {\n            searchBooks: _this2.searchBooks,\n            searchedBooks: _this2.state.searchedBooks,\n            updateBookShelf: _this2.updateBookShelf,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return BooksApp;\n}(React.Component);\n\nexport default BooksApp;","map":{"version":3,"sources":["/Users/mujadad/ReactProjects/MyReads/src/App.js"],"names":["React","ShelfType","AppTitle","Shelf","BooksAPI","Link","Route","SearchBar","BooksApp","props","fetchAllBooks","getAll","then","books","setState","searchBooks","query","search","searchedBooks","isValidArray","book","shelf","getBookShelf","bookIndex","state","findIndex","b","id","NONE","updateBookShelf","update","push","prevState","types","map","shelfType","filter","shelfTitles","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './App.css'\nimport * as ShelfType from \"./constants\";\nimport AppTitle from \"./AppTitle\";\nimport Shelf from \"./Shelf\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport {Link, Route} from \"react-router-dom\";\nimport SearchBar from \"./SearchBar\";\n\nclass BooksApp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            books: [],\n            searchedBooks: [],\n        };\n    }\n\n    fetchAllBooks = () => {\n        BooksAPI.getAll().then(\n            (books) => {\n                this.setState(\n                    () => {\n                        return ({books: books})\n                    }\n                )\n            }\n        );\n    }\n\n    searchBooks = (query) => {\n        BooksAPI.search(query).then(\n            (books) => {\n                let searchedBooks = [];\n                if (SearchBar.isValidArray(books)) {\n                    for (let book of books) {\n                        book.shelf = this.getBookShelf(book);\n                    }\n                    searchedBooks = books;\n                }\n                this.setState(\n                    () => {\n                        return ({searchedBooks: searchedBooks})\n                    }\n                )\n            }\n        )\n    }\n\n    componentDidMount() {\n        this.fetchAllBooks();\n    }\n\n    getBookShelf = (book) => {\n        const bookIndex = this.state.books.findIndex((b) => (b.id === book.id));\n        if (bookIndex !== -1) {\n            return this.state.books[bookIndex].shelf;\n        } else {\n            return ShelfType.NONE;\n        }\n    }\n\n    updateBookShelf = (book, shelf) => {\n        BooksAPI.update(book, shelf)\n        const bookIndex = this.state.books.findIndex((b) => (b.id === book.id));\n        book.shelf = shelf;\n        const books = [...this.state.books];\n\n        if (bookIndex !== -1) {\n            books[bookIndex] = book;\n        } else {\n            books.push(book)\n        }\n        this.setState(\n            (prevState) => ({books: books})\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <div className=\"list-books\">\n                    <AppTitle title={'MyReads'}/>\n                    <Route exact path='/' render={\n                        () => {\n                            return <div>{\n                                ShelfType.types.map((shelfType) => (\n                                    <Shelf key={shelfType} books={\n                                        this.state.books.filter(\n                                            (book) => (book.shelf === shelfType)\n                                        )} shelfTitle={ShelfType.shelfTitles[shelfType]}\n                                           updateBookShelf={this.updateBookShelf}\n                                    />))\n                            }\n                                <div className=\"open-search\">\n                                    <Link to='/search'>\n                                        <button>Search for Book</button>\n                                    </Link>\n                                </div>\n                            </div>\n                        }\n                    }/>\n\n                    <Route exact path='/search' render={() => (\n                        <SearchBar searchBooks={this.searchBooks}\n                                   searchedBooks={this.state.searchedBooks}\n                                   updateBookShelf={this.updateBookShelf}/>\n                    )}\n                    />\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default BooksApp;\n"]},"metadata":{},"sourceType":"module"}